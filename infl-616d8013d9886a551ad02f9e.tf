resource "aws_launch_configuration" "stag-backend-adi-validations" {
	name = "stag-backend-adi-validations"
	image_id = "ami-089668cd321f3cf82"
	instance_type = "t2.medium"
	iam_instance_profile = "arn:aws:iam::094724549126:instance-profile/stag-backend"
	key_name = "stag"
	security_groups = ["sg-0b7da4b27b0d9caf0"] 
	associate_public_ip_address = true
	vpc_classic_link_security_groups = [] 
	user_data_base64 = ""
	enable_monitoring = "false"
	ebs_optimized = false
	ebs_block_device {
		delete_on_termination = true
		encrypted = false
		volume_type = "standard"
	}
	root_block_device {
		delete_on_termination = true
		encrypted = false
		iops = 0
		throughput = 0
		volume_type = "standard"
	}
}